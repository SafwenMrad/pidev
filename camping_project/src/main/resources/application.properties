#Server configuration
#server.servlet.context-path=/servlet
#spring.mvc.servlet.path=/SpringMVC
server.port=8090
spring.mvc.format.date= yyyy-MM-dd



#server.servlet.context-path=/SpringMVC
#spring.mvc.servlet.path=/servlet



#server.servlet.header.referrer-policy=no-referrer
### DATABASE ###

spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=200MB
#max allowed packet
spring.datasource.url=jdbc:mysql://localhost:3306/picloud?useUnicode=true&useJDBCCompliantTimezoneShift=true&createDatabaseIfNotExist=true&useLegacyDatetimeCode=false
spring.jackson.time-zone=GMT+1
spring.datasource.username=root
spring.datasource.password=root
### JPA / HIBERNATE ###
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
#Web configuration
spring.mvc.view.prefix=/views/
spring.mvc.view.suffix=.jsp

#logging configuration
logging.level.tn.esprit.service=debug

logging.level.tn.esprit.repository=info
#logging.level.org.springframework.beans.factory=DEBUG


###Token properties######
app.jwtSecret=mySecretKey
app.jwtExpirationInMs=300000
spring.mvc.pathmatch.matching-strategy=ant_path_matcher



#Ajoutez la clé API Google Maps à votre projet Spring en la stockant dans un fichier de propriétés
google.maps.apikey=<votre-clé-api-google-maps qu'on a créée>


